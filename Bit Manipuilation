1.
class CheckBit {
    // Function to check if Kth bit is set or not.
    static boolean checkKthBit(int n, int k) {
    int mask = 1 << k;
    return (n & mask) > 0 ;    }
}

2.
class Solution {
    static boolean isEven(int n) {
        if((n&1)==0){
              return true;
          }
          
          return false;
    }
}

3.

class Solution {
    
    public static int countSetBits(int n) {
        int count = 0;
        int i = 0;
        while ((1 << i) <= n) {
            int blockSize = 1 << (i + 1);
            int totalBlocks = (n + 1) / blockSize;
            count += totalBlocks * (blockSize / 2);
            int remainder = (n + 1) % blockSize;
            if (remainder > (blockSize / 2)) {
                count += remainder - (blockSize / 2);
            }
              i++;
        }
        return count;
    }
    public static int testCountSetBits(int n) {
        return countSetBits(n);
    }
}

4.
class Solution {
    public boolean isPowerOfTwo(int n) {
        return n > 0 && (n & (n - 1)) == 0;
    }
}

5.
class Solution {
    static int setBit(int n) {
             return (n | (n + 1));

     }
}

6.
class Solution{
    static List<Integer> get(int a,int b)
    {
        return Arrays.asList(b,a);
    }
}
